//const express = require('express');

//mport express from 'express';
const express = require('express');
const jsonParser = require('body-parser').json();
const path = require('path');

const {Dishids} = require('../models/dishModels');
//import Dishid from '../models/dishModels';

const router = express.Router();
router.use(jsonParser);

// Get endpoint
router.get('/', (req,res) => {
  Dishids
    .find()
    .exec()
    .then(dishes => {
      res.json(dishes);
    })
    .catch(err => {
      console.error(err);
        res.status(500).json({message: 'Internal server error - GET dish'})
    });
});

// Find dish by dishname
router.get('/:dishname', (req, res) => {
  Dishids
    .findOne({'dishname': req.params.dishname}) // use this syntax if the id is in the database, else use findById(req.params.id) = id generated by mongodb / 
    .exec()
    .then(dishes =>res.json(dishes))
    .catch(err => {
      console.error(err);
        res.status(404).json({message: 'Dish ID Not Found'})
    });
});

// Find dish by ID
// router.get('/dish/:id', (req, res) => {
//   Dishids
//     .findById(req.params.id) // use this syntax if the id is in the database, else use findById(req.params.id) = id generated by mongodb / 
//     .exec()
//     .then(dishes =>res.json(dishes))
//     .catch(err => {
//       console.error(err);
//         res.status(404).json({message: 'Dish ID Not Found'})
//     });
// });

// POST endpoint
router.post('/', (req, res) => {
  const requiredFields = ['dishname', 'content'];
  for (let i=0; i<requiredFields.length; i++) {
    const field = requiredFields[i];
    if (!(field in req.body)) {
      const message = `Missing \`${field}\` in request body`
      console.error(message);
      return res.status(400).send(message);
    }
  }

  Dishids
    .create({
      dishname: req.body.dishname,
      content: req.body.content
    })
    .then(
      console.log(req.body.dishname)
    )
    .then(
        dishes => res.status(201).json(dishes)
    )
    .catch(err => {
        console.error(err);
        res.status(500).json({error: 'Something went wrong'});
    });
});

// PUT endpoint - 1 updateable field - description - example: http://localhost:8080/dish/593875abd0db4334c433cbd7
router.put('/:id', (req, res) => {
  // ensure that the id in the request path and the one in request body match
  if (!(req.params.id && req.body.id && req.params.id === req.body.id)) {
    const message = (
      `Request path id (${req.params.id}) and request body id ` +
      `(${req.body.id}) must match`);
    console.error(message);
    res.status(400).json({message: message});
  }

  const toUpdate = {};
  const updateableFields = ['content'];

  updateableFields.forEach(field => {
    if (field in req.body) {
      toUpdate[field] = req.body[field];
    }
  });

  Dishids
    // all key/value pairs in toUpdate will be updated -- that's what `$set` does
    .findByIdAndUpdate(req.params.id, {$set: toUpdate}) // find by Mongoose ID
    .exec()
    .then(
      Dishids => res.status(204).end())
    .catch(err => res.status(404).json({message: 'ID not found'}));
});

// DELETE endpoint
router.delete('/:id', (req, res) => {
  Dishids
    .findByIdAndRemove(req.params.id)
    .exec()
    .then(Dishids => res.status(204).end())
    .catch(err => res.status(404).json({message: 'ID not found'}));
});

module.exports = router;